@model Shared.Dtos.Paintings.PaintingDto

@using Client.Core.HtmlHelpers
@using Shared.Core.Constants
@using Shared.I18n.Constants
@using Shared.I18n.Utils

@{
    ViewBag.Title = "Profile";
}

<div class="content-title">
    <h3>@Html.LocalizedDisplay(MessageKeyConstants.LABEL_PAINTINGS)</h3>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-violet panel-default with-nav-tabs">
            <div class="panel-heading">
                <ul class="nav nav-tabs">
                    <li class="active">
                        <a href="#tab1" data-toggle="tab"><i class="fa fa-user"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_PAINTINGS)</a>
                    </li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade in active" id="tab1">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="admin-button-box">
                                    @Html.DialogActionLink("<i class='fa fa-upload'></i> " + ResourceUtils.GetString(MessageKeyConstants.LABEL_UPLOAD_PHOTOS), HtmlConstants.DIALOG_UPLOAD, WebConstants.VIEW_UPLOAD_DIALOG, WebConstants.CONTROLLER_PHOTO, new { UserDefinableOwnerId = Model.Id, UserDefinableOwnerType = Model.GetType() }, new { @class = "btn btn-sm btn-info" })
                                </div>
                            </div>
                        </div>
                        @using (Html.BeginForm())
                        {
                            if (!Guid.Empty.Equals(Model.Id))
                            {
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.CreatedDate)
                            }
                            <div class="form-horizontal">
                                @*<div id="dialog-validation-summary"></div>*@
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, new { @class = "control-label col-sm-2 form-control-title form-control-required" })
                                    <div class="col-sm-10">
                                        @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Title, new { @class = "form-control-editable form-control-title" }), Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control form-control-title" } }))
                                        @Html.ValidationMessageFor(model => model.Title)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.UsersReference, new { @class = "control-label col-sm-2 form-control-required" })
                                    <div class="col-sm-10">
                                        @Html.InlineEditableControl(Html.ReferenceLabelFor(model => model.UsersReference, null, null, new { @class = "form-control-editable" }), @Html.ReferenceFor(model => model.UsersReference.Value, "User", "/Admin/User/GetByPrefix", 1))
                                        @Html.ValidationMessageFor(model => model.UsersReference)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CollectionReference, new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-4">
                                        @Html.InlineEditableControl(Html.ReferenceLabelFor(model => model.CollectionReference, null, null, new { @class = "form-control-editable" }), Html.RemoteDropDownListFor(model => model.CollectionId, "/Admin/Collection/GetAllCollectionReferences"))
                                    </div>
                                    @Html.LabelFor(model => model.Date, new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-4">
                                        @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Date, new { @class = "form-control-editable" }), Html.DateFor(model => model.Date))
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">@Html.LocalizedDisplay(MessageKeyConstants.LABEL_SIZE)</label>
                                    <div class="col-sm-2">
                                        @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Width, new { @class = "form-control-editable" }), Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } }))
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Height, new { @class = "form-control-editable" }), Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } }))
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Surface, new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-4">
                                        @Html.InlineEditableControl(Html.LocalizedDropDownDisplayFor(model => model.Surface, new { @class = "form-control-editable" }), Html.LocalizedDropDownListFor(model => model.Surface, new { @class = "form-control" }))
                                    </div>
                                    @Html.LabelFor(model => model.Technique, new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-4">
                                        @Html.InlineEditableControl(Html.LocalizedDropDownDisplayFor(model => model.Technique, new { @class = "form-control-editable" }), Html.LocalizedDropDownListFor(model => model.Technique, new { @class = "form-control" }))
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Owner, new { @class = "control-label col-sm-2" })
                                    <div class="col-sm-10">
                                        @Html.InlineEditableControl(Html.EditableLabelFor(model => model.Owner, new { @class = "form-control-editable" }), Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } }))
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-lg-12">
                                        <div class="pull-right">
                                            <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_SAVE)</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div>
                    @Ajax.RemoteContent(WebConstants.VIEW_LIST, WebConstants.CONTROLLER_PHOTO, WebConstants.AREA_ADMIN, new { UserDefinableOwnerId = Model.Id })
                </div>
            </div>
        </div>
    </div>
</div>
