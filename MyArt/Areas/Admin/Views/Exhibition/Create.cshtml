@model Shared.Dtos.Exhibitions.ExhibitionDto

@using Client.Core.HtmlHelpers
@using Shared.Core.Constants
@using Shared.I18n.Constants

<div class="modal-backdrop fade in"></div>
<div class="modal fade in" style="display:block" id="@HtmlConstants.DIALOG_EXHIBITION" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close btn-dialog-close">&times;</button>
                <h4 class="modal-title">@Html.LocalizedDisplay(MessageKeyConstants.LABEL_EXHIBITIONS)</h4>
            </div>
            @using (Html.BeginForm(WebConstants.VIEW_NEXT, WebConstants.CONTROLLER_EXHIBITION, FormMethod.Post, new { @class = "asynchronous-form", @data_wizard_current_step = "0" }))
            {
                <div class="modal-body">
                    <div id="dialog-validation-summary"></div>
                    <div class="wizard-step" data-wizard-step="0">
                        @Html.HiddenFor(model => model.Id)
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-2 form-control-required" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">@Html.LocalizedDisplay(MessageKeyConstants.LABEL_DATE)</label>
                                <div class="col-sm-6">
                                    @Html.DateRangeFor(model => model.Start, model => model.End, new { @class = "form-control-editable" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control", @placeholder = "__ : __", @data_mask = "99 : 99" } })
                                </div>
                                <div class="col-sm-2">
                                    @Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control", @placeholder = "__ : __", @data_mask = "99 : 99" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, new { @class = "control-label col-sm-2" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, new { @class = "control-label col-sm-2" })
                                <div class="col-sm-5">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.LabelFor(model => model.Zipcode, new { @class = "control-label col-sm-2" })
                                <div class="col-sm-3">
                                    @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control", @placeholder = "___ __", @data_mask = "999 99" } })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.GoogleMapFor(model => model.Gps, new { @style = "height: 96px" })
                            </div>
                        </div>
                    </div>
                    <div class="wizard-step" data-wizard-step="1">
                        @Html.RichTextBoxFor(model => model.Description)
                    </div>
                    <div class="wizard-step" data-wizard-step="2">
                        <div class="form-control-list">
                            <table class="table table-hover">
                                <tbody>
                                    @if (Model.PaintingsCheckedDto != null)
                                    {
                                        int j = 0;
                                        foreach (var item in Model.PaintingsCheckedDto)
                                        {
                                            <tr>
                                                <td>
                                                    @if (item.PhotoResourceDto == null)
                                                    {
                                                        <img src="~/Content/images/nophoto.png" alt="img" class="img-small" />
                                                    }
                                                    else
                                                    {
                                                        <img src="@item.PhotoResourceDto.GetRelativeThumbnailFile()" alt="img" class="img-small" />
                                                    }
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => modelItem.PaintingsCheckedDto[j].Title)
                                                    @Html.HiddenFor(modelItem => modelItem.PaintingsCheckedDto[j].Title)
                                                </td>
                                                <td>
                                                    @Html.HiddenFor(modelItem => modelItem.PaintingsCheckedDto[j].Id)
                                                    @Html.CheckBoxFor(modelItem => modelItem.PaintingsCheckedDto[j].Checked)
                                                </td>
                                            </tr>
                                            j++;
                                        }
                                    }
                                </tbody>
                            </table>                      
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-sm-6">
                        <div class="progress">
                            <div class="progress-bar"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <button type="button" class="btn btn-default btn-dialog-close"><i class="fa fa-close"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_CLOSE)</button>
                        <button type="button" class="btn btn-default btn-dialog-previous"><i class="fa fa-angle-left"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_PREVIOUS)</button>
                        <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> @Html.LocalizedDisplay(MessageKeyConstants.LABEL_SAVE)</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
